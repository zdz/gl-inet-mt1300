# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DIST_PACKAGE: /tmp/gl_inet_mt1300_packages.tar.bz2
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo bash -x init_env.sh
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workspace
          sudo chown $USER:$GROUPS /workspace
          pwd
          whoami
          df -hT

      - name: Run build script
        run: bash -x openwrt_ssr_plus_build.sh

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@master
        with:
          # Artifact name
          name: artifact # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /tmp/gl_inet_mt1300_packages.tar.bz2
          # The desired behavior if no files are found using the provided path.
 
      - name: Show info        
        if: (!cancelled())
        run: |
          df -hT
          du -hs ${DIST_PACKAGE}

      - name: Upload to cowtransfer
        if: env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress ${DIST_PACKAGE} 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      
      - name: Upload to WeTransfer
        if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${DIST_PACKAGE} 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"